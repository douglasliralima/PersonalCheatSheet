/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cow.js":
/*!********************!*\
  !*** ./src/cow.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var cowsay_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cowsay-browser */ \"./node_modules/cowsay-browser/index.js\");\n// Quando nÃ£o colocamos o ./, significa que temos uma dependencia externa\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  say: function say(str) {\n    return cowsay_browser__WEBPACK_IMPORTED_MODULE_0__.say({\n      text: str\n    });\n  }\n});\n\n//# sourceURL=webpack://1_simples_webpack/./src/cow.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cow */ \"./src/cow.js\");\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/main.css */ \"./src/css/main.css\");\n//O ./ significa que o import vai acontecer a partir da mesma pasta do arquivo local\n\n\nvar message = 'is great';\ndocument.querySelector('#box').innerText = _cow__WEBPACK_IMPORTED_MODULE_0__.default.say(\"Webpack with Babel \".concat(message, \"!\"));\n\n//# sourceURL=webpack://1_simples_webpack/./src/index.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/index.js":
/*!**********************************************!*\
  !*** ./node_modules/cowsay-browser/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var baloon = __webpack_require__(/*! ./lib/balloon */ \"./node_modules/cowsay-browser/lib/balloon.js\");\r\nvar cows = __webpack_require__(/*! ./lib/cows */ \"./node_modules/cowsay-browser/lib/cows.js\");\r\nvar faces = __webpack_require__(/*! ./lib/faces */ \"./node_modules/cowsay-browser/lib/faces.js\");\r\n\r\nexports.say = function (options) {\r\n\treturn doIt(options, true);\r\n};\r\n\r\nexports.think = function (options) {\r\n\treturn doIt(options, false);\r\n};\r\n\r\nexports.list = cows.list;\r\n\r\nfunction doIt (options, sayAloud) {\r\n\tvar cow = cows.get(options.f || \"default\");\r\n\tvar face = faces(options);\r\n\tface.thoughts = sayAloud ? \"\\\\\" : \"o\";\r\n\r\n\tvar action = sayAloud ? \"say\" : \"think\";\r\n\treturn baloon[action](options.text || options._.join(\" \"), options.n ? null : options.W) + \"\\n\" + cow(face);\r\n}\r\n\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/index.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/lib/balloon.js":
/*!****************************************************!*\
  !*** ./node_modules/cowsay-browser/lib/balloon.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var os = __webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\");\r\n\r\nexports.say = function (text, wrap) {\r\n\tdelimiters = {\r\n\t\tfirst : [\"/\", \"\\\\\"],\r\n\t\tmiddle : [\"|\", \"|\"],\r\n\t\tlast : [\"\\\\\", \"/\"],\r\n\t\tonly : [\"<\", \">\"]\r\n\t};\r\n\r\n\treturn format(text, wrap, delimiters);\r\n}\r\n\r\nexports.think = function (text, wrap) {\r\n\tdelimiters = {\r\n\t\tfirst : [\"(\", \")\"],\r\n\t\tmiddle : [\"(\", \")\"],\r\n\t\tlast : [\"(\", \")\"],\r\n\t\tonly : [\"(\", \")\"]\r\n\t};\r\n\r\n\treturn format(text, wrap, delimiters);\r\n}\r\n\r\nfunction format (text, wrap, delimiters) {\r\n\tvar lines = split(text, wrap);\r\n\tvar maxLength = max(lines);\r\n\r\n\tvar balloon;\r\n\tif (lines.length === 1) {\r\n\t\tballoon = [\r\n\t\t\t\" \" + top(maxLength), \r\n\t\t\tdelimiters.only[0] + \" \" + lines[0] + \" \" + delimiters.only[1],\r\n\t\t\t\" \" + bottom(maxLength)\r\n\t\t];\r\n\t} else {\r\n\t\tballoon = [\" \" + top(maxLength)];\r\n\r\n\t\tfor (var i = 0, len = lines.length; i < len; i += 1) {\r\n\t\t\tvar delimiter;\r\n\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tdelimiter = delimiters.first;\r\n\t\t\t} else if (i === len - 1) {\r\n\t\t\t\tdelimiter = delimiters.last;\r\n\t\t\t} else {\r\n\t\t\t\tdelimiter = delimiters.middle;\r\n\t\t\t}\r\n\r\n\t\t\tballoon.push(delimiter[0] + \" \" + pad(lines[i], maxLength) + \" \" + delimiter[1]);\r\n\t\t}\r\n\r\n\t\tballoon.push(\" \" + bottom(maxLength));\r\n\t}\r\n\r\n\treturn balloon.join(\"\\n\"); //os.EOL\r\n}\r\n\r\nfunction split (text, wrap) {\r\n\ttext = text.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, '');\r\n\r\n\tvar lines = [];\r\n\tif (!wrap) {\r\n\t\tlines = text.split(\"\\n\");\r\n\t} else {\r\n\t\tvar start = 0;\r\n\t\twhile (start < text.length) {\r\n\t\t\tvar nextNewLine = text.indexOf(\"\\n\", start);\r\n\r\n\t\t\tvar wrapAt = Math.min(start + wrap, nextNewLine === -1 ? text.length : nextNewLine);\r\n\r\n\t\t\tlines.push(text.substring(start, wrapAt));\r\n\t\t\tstart = wrapAt;\r\n\r\n\t\t\t// Ignore next new line\r\n\t\t\tif (text.charAt(start) === \"\\n\") {\r\n\t\t\t\tstart += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn lines;\r\n}\r\n\r\nfunction max (lines) {\r\n\tvar max = 0;\r\n\tfor (var i = 0, len = lines.length; i < len; i += 1) {\r\n\t\tif (lines[i].length > max) {\r\n\t\t\tmax = lines[i].length;\r\n\t\t}\r\n\t}\r\n\r\n\treturn max;\r\n}\r\n\r\nfunction pad (text, length) {\r\n\treturn text + (new Array(length - text.length + 1)).join(\" \");\r\n}\r\n\r\nfunction top (length) {\r\n\treturn new Array(length + 3).join(\"_\");\r\n}\r\n\r\nfunction bottom (length) {\r\n\treturn new Array(length + 3).join(\"-\");\r\n}\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/lib/balloon.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/lib/cow-definitions.js":
/*!************************************************************!*\
  !*** ./node_modules/cowsay-browser/lib/cow-definitions.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// Generated code\nexports.cowdefs = {\n  \"beavis.zen\": \"##\\r\\n## Beavis, with Zen philosophy removed.\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts         __------~~-,\\r\\n    $thoughts      ,'            ,\\r\\n          /               \\\\\\\\\\r\\n         /                :\\r\\n        |                  '\\r\\n        |                  |\\r\\n        |                  |\\r\\n         |   _--           |\\r\\n         _| =-.     .-.   ||\\r\\n         o|/o/       _.   |\\r\\n         /  ~          \\\\\\\\ |\\r\\n       (____\\\\@)  ___~    |\\r\\n          |_===~~~.`    |\\r\\n       _______.--~     |\\r\\n       \\\\\\\\________       |\\r\\n                \\\\\\\\      |\\r\\n              __/-___-- -__\\r\\n             /            _ \\\\\\\\\\r\\nEOC\\r\\n\",\n  \"bud-frogs\": \"##\\r\\n## The Budweiser frogs\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n     $thoughts\\r\\n      $thoughts\\r\\n          oO)-.                       .-(Oo\\r\\n         /__  _\\\\\\\\                     /_  __\\\\\\\\\\r\\n         \\\\\\\\  \\\\\\\\(  |     ()~()         |  )/  /\\r\\n          \\\\\\\\__|\\\\\\\\ |    (-___-)        | /|__/\\r\\n          '  '--'    ==`-'==        '--'  '\\r\\nEOC\\r\\n\",\n  \"bunny\": \"##\\r\\n## A cute little wabbit\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts   \\\\\\\\\\r\\n        \\\\\\\\ /\\\\\\\\\\r\\n        ( )\\r\\n      .( o ).\\r\\nEOC\\r\\n\",\n  \"cheese\": \"##\\r\\n## The cheese from milk & cheese\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts\\r\\n      _____   _________\\r\\n     /     \\\\\\\\_/         |\\r\\n    |                 ||\\r\\n    |                 ||\\r\\n   |    ###\\\\\\\\  /###   | |\\r\\n   |     0  \\\\\\\\/  0    | |\\r\\n  /|                 | |\\r\\n / |        <        |\\\\\\\\ \\\\\\\\\\r\\n| /|                 | | |\\r\\n| |     \\\\\\\\_______/   |  | |\\r\\n| |                 | / /\\r\\n/||                 /|||\\r\\n   ----------------|\\r\\n        | |    | |\\r\\n        ***    ***\\r\\n       /___\\\\\\\\  /___\\\\\\\\\\r\\nEOC\\r\\n\",\n  \"chick\": \"$the_cow = <<\\\"EOC\\\";\\r\\n$thoughts\\r\\n $thoughts\\r\\n\\r\\n        .---.\\r\\n     _ /     ' .---.\\r\\n     >|  o    `     `\\\\\\r\\n     ` \\\\       .---._ '._ ,\\r\\n        '-.;         /`  /'\\r\\n           \\\\    '._.'   /\\r\\n            '.        .'\\r\\n              `\\\";--\\\\_/\\r\\n       jgs    _/_   |\\r\\n           -'`/  .--;--\\r\\n             '    .'\\r\\n\\r\\nEOC\\r\\n\",\n  \"chicken-and-egg\": \"$the_cow = <<\\\"EOC\\\";\\r\\n$thoughts\\r\\n $thoughts\\r\\n\\r\\n\\r\\n              /'._     _,\\r\\n              \\\\   ;__.'  }\\r\\n          (`-._;-\\\" _.--.}'\\r\\n          /_'    /`    _}     _.--\\\"\\\"\\\"-.\\r\\n            `.   \\\\_._.;     .'         \\\\\\r\\n              '-.__ /      /            |\\r\\n      jgs      _/  `\\\\      \\\\            /\\r\\n              ^`   ^`       '._       .'\\r\\n                               `\\\"\\\"\\\"\\\"\\\"`\\r\\nEOC\\r\\n\",\n  \"cower\": \"##\\r\\n## A cowering cow\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n     $thoughts\\r\\n      $thoughts\\r\\n        ,__, |    | \\r\\n        (oo)\\\\\\\\|    |___\\r\\n        (__)\\\\\\\\|    |   )\\\\\\\\_\\r\\n             |    |_w |  \\\\\\\\\\r\\n             |    |  ||   *\\r\\n\\r\\n             Cower....\\r\\nEOC\\r\\n\",\n  \"daemon\": \"##\\r\\n## 4.4 >> 5.4\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts         ,        ,\\r\\n    $thoughts       /(        )`\\r\\n     $thoughts      \\\\\\\\ \\\\\\\\___   / |\\r\\n            /- _  `-/  '\\r\\n           (/\\\\\\\\/ \\\\\\\\ \\\\\\\\   /\\\\\\\\\\r\\n           / /   | `    \\\\\\\\\\r\\n           O O   ) /    |\\r\\n           `-^--'`<     '\\r\\n          (_.)  _  )   /\\r\\n           `.___/`    /\\r\\n             `-----' /\\r\\n<----.     __ / __   \\\\\\\\\\r\\n<----|====O)))==) \\\\\\\\) /====\\r\\n<----'    `--' `.__,' \\\\\\\\\\r\\n             |        |\\r\\n              \\\\\\\\       /\\r\\n        ______( (_  / \\\\\\\\______\\r\\n      ,'  ,-----'   |        \\\\\\\\\\r\\n      `--{__________)        \\\\\\\\/\\r\\nEOC\\r\\n\",\n  \"default\": \"$the_cow = <<\\\"EOC\\\";\\r\\n        $thoughts   ^__^\\r\\n         $thoughts  ($eyes)\\\\\\\\_______\\r\\n            (__)\\\\\\\\       )\\\\\\\\/\\\\\\\\\\r\\n             $tongue ||----w |\\r\\n                ||     ||\\r\\nEOC\\r\\n\",\n  \"doge\": \"##\\r\\n## Doge\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts\\r\\n\\r\\n           _                _\\r\\n          / /.           _-//\\r\\n         / ///         _-   /\\r\\n        //_-//=========     /\\r\\n      _///        //_ ||   ./\\r\\n    _|                 -__-||\\r\\n   |  __              - \\\\\\\\   \\\\\\r\\n  |  |#-       _-|_           |\\r\\n  |            |#|||       _   |  \\r\\n |  _==_                       ||\\r\\n- ==|.=.=|_ =                  |\\r\\n|  |-|-  ___                  |\\r\\n|    --__   _                /\\r\\n||     ===                  |\\r\\n |                     _. //\\r\\n  ||_         __-   _-  _|\\r\\n     \\\\_______/  ___/  _|\\r\\n                   --*\\r\\nEOC\\r\\n\",\n  \"dragon-and-cow\": \"##\\r\\n## A dragon smiting a cow, possible credit to kube@csua.berkeley.edu\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n                       $thoughts                    ^    /^\\r\\n                        $thoughts                  / \\\\\\\\  // \\\\\\\\\\r\\n                         $thoughts   |\\\\\\\\___/|      /   \\\\\\\\//  .\\\\\\\\\\r\\n                          $thoughts  /O  O  \\\\\\\\__  /    //  | \\\\\\\\ \\\\\\\\           *----*\\r\\n                            /     /  \\\\\\\\/_/    //   |  \\\\\\\\  \\\\\\\\          \\\\\\\\   |\\r\\n                            \\\\@___\\\\@`    \\\\\\\\/_   //    |   \\\\\\\\   \\\\\\\\         \\\\\\\\/\\\\\\\\ \\\\\\\\\\r\\n                           0/0/|       \\\\\\\\/_ //     |    \\\\\\\\    \\\\\\\\         \\\\\\\\  \\\\\\\\\\r\\n                       0/0/0/0/|        \\\\\\\\///      |     \\\\\\\\     \\\\\\\\       |  |\\r\\n                    0/0/0/0/0/_|_ /   (  //       |      \\\\\\\\     _\\\\\\\\     |  /\\r\\n                 0/0/0/0/0/0/`/,_ _ _/  ) ; -.    |    _ _\\\\\\\\.-~       /   /\\r\\n                             ,-}        _      *-.|.-~-.           .~    ~\\r\\n            \\\\\\\\     \\\\\\\\__/        `/\\\\\\\\      /                 ~-. _ .-~      /\\r\\n             \\\\\\\\____($eyes)           *.   }            {                   /\\r\\n             (    (--)          .----~-.\\\\\\\\        \\\\\\\\-`                 .~\\r\\n             //__\\\\\\\\\\\\\\\\  \\\\\\\\__ Ack!   ///.----..<        \\\\\\\\             _ -~\\r\\n            //    \\\\\\\\\\\\\\\\               ///-._ _ _ _ _ _ _{^ - - - - ~\\r\\nEOC\\r\\n\",\n  \"dragon\": \"##\\r\\n## The Whitespace Dragon\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n      $thoughts                    / \\\\\\\\  //\\\\\\\\\\r\\n       $thoughts    |\\\\\\\\___/|      /   \\\\\\\\//  \\\\\\\\\\\\\\\\\\r\\n            /0  0  \\\\\\\\__  /    //  | \\\\\\\\ \\\\\\\\    \\r\\n           /     /  \\\\\\\\/_/    //   |  \\\\\\\\  \\\\\\\\  \\r\\n           \\\\@_^_\\\\@'/   \\\\\\\\/_   //    |   \\\\\\\\   \\\\\\\\ \\r\\n           //_^_/     \\\\\\\\/_ //     |    \\\\\\\\    \\\\\\\\\\r\\n        ( //) |        \\\\\\\\///      |     \\\\\\\\     \\\\\\\\\\r\\n      ( / /) _|_ /   )  //       |      \\\\\\\\     _\\\\\\\\\\r\\n    ( // /) '/,_ _ _/  ( ; -.    |    _ _\\\\\\\\.-~        .-~~~^-.\\r\\n  (( / / )) ,-{        _      `-.|.-~-.           .~         `.\\r\\n (( // / ))  '/\\\\\\\\      /                 ~-. _ .-~      .-~^-.  \\\\\\\\\\r\\n (( /// ))      `.   {            }                   /      \\\\\\\\  \\\\\\\\\\r\\n  (( / ))     .----~-.\\\\\\\\        \\\\\\\\-'                 .~         \\\\\\\\  `. \\\\\\\\^-.\\r\\n             ///.----..>        \\\\\\\\             _ -~             `.  ^-`  ^-_\\r\\n               ///-._ _ _ _ _ _ _}^ - - - - ~                     ~-- ,.-~\\r\\n                                                                  /.-~\\r\\nEOC\\r\\n\",\n  \"elephant-in-snake\": \"##\\r\\n## Do we need to explain this?\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts              ....       \\r\\n           ........    .      \\r\\n          .            .      \\r\\n         .             .      \\r\\n.........              .......\\r\\n..............................\\r\\n\\r\\nElephant inside ASCII snake\\r\\nEOC\\r\\n\",\n  \"elephant\": \"##\\r\\n## An elephant out and about\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n $thoughts     /\\\\\\\\  ___  /\\\\\\\\\\r\\n  $thoughts   // \\\\\\\\/   \\\\\\\\/ \\\\\\\\\\\\\\\\\\r\\n     ((    O O    ))\\r\\n      \\\\\\\\\\\\\\\\ /     \\\\\\\\ //\\r\\n       \\\\\\\\/  | |  \\\\\\\\/ \\r\\n        |  | |  |  \\r\\n        |  | |  |  \\r\\n        |   o   |  \\r\\n        | |   | |  \\r\\n        |m|   |m|  \\r\\nEOC\\r\\n\",\n  \"eyes\": \"##\\r\\n## Evil-looking eyes\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n    $thoughts\\r\\n     $thoughts\\r\\n                                   .::!!!!!!!:.\\r\\n  .!!!!!:.                        .:!!!!!!!!!!!!\\r\\n  ~~~~!!!!!!.                 .:!!!!!!!!!UWWW\\\\$\\\\$\\\\$ \\r\\n      :\\\\$\\\\$NWX!!:           .:!!!!!!XUWW\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$P \\r\\n      \\\\$\\\\$\\\\$\\\\$\\\\$##WX!:      .<!!!!UW\\\\$\\\\$\\\\$\\\\$\\\"  \\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$# \\r\\n      \\\\$\\\\$\\\\$\\\\$\\\\$  \\\\$\\\\$\\\\$UX   :!!UW\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$   4\\\\$\\\\$\\\\$\\\\$\\\\$* \\r\\n      ^\\\\$\\\\$\\\\$B  \\\\$\\\\$\\\\$\\\\$\\\\\\\\     \\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$   d\\\\$\\\\$R\\\" \\r\\n        \\\"*\\\\$bd\\\\$\\\\$\\\\$\\\\$      '*\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$\\\\$o+#\\\" \\r\\n             \\\"\\\"\\\"\\\"          \\\"\\\"\\\"\\\"\\\"\\\"\\\" \\r\\nEOC\\r\\n\",\n  \"flaming-sheep\": \"##\\r\\n## The flaming sheep, contributed by Geordan Rosario (geordan@csua.berkeley.edu)\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts            .    .     .   \\r\\n   $thoughts      .  . .     `  ,     \\r\\n    $thoughts    .; .  : .' :  :  : . \\r\\n     $thoughts   i..`: i` i.i.,i  i . \\r\\n      $thoughts   `,--.|i |i|ii|ii|i: \\r\\n           U${eyes}U\\\\\\\\.'\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@`.||' \\r\\n           \\\\\\\\__/(\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@)'  \\r\\n                (\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@)    \\r\\n                `YY~~~~YY'    \\r\\n                 ||    ||     \\r\\nEOC\\r\\n\",\n  \"ghostbusters\": \"##\\r\\n## Ghostbusters!\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n          $thoughts\\r\\n           $thoughts\\r\\n            $thoughts          __---__\\r\\n                    _-       /--______\\r\\n               __--( /     \\\\\\\\ )XXXXXXXXXXX\\\\\\\\v.\\r\\n             .-XXX(   O   O  )XXXXXXXXXXXXXXX-\\r\\n            /XXX(       U     )        XXXXXXX\\\\\\\\\\r\\n          /XXXXX(              )--_  XXXXXXXXXXX\\\\\\\\\\r\\n         /XXXXX/ (      O     )   XXXXXX   \\\\\\\\XXXXX\\\\\\\\\\r\\n         XXXXX/   /            XXXXXX   \\\\\\\\__ \\\\\\\\XXXXX\\r\\n         XXXXXX__/          XXXXXX         \\\\\\\\__---->\\r\\n ---___  XXX__/          XXXXXX      \\\\\\\\__         /\\r\\n   \\\\\\\\-  --__/   ___/\\\\\\\\  XXXXXX            /  ___--/=\\r\\n    \\\\\\\\-\\\\\\\\    ___/    XXXXXX              '--- XXXXXX\\r\\n       \\\\\\\\-\\\\\\\\/XXX\\\\\\\\ XXXXXX                      /XXXXX\\r\\n         \\\\\\\\XXXXXXXXX   \\\\\\\\                    /XXXXX/\\r\\n          \\\\\\\\XXXXXX      >                 _/XXXXX/\\r\\n            \\\\\\\\XXXXX--__/              __-- XXXX/\\r\\n             -XXXXXXXX---------------  XXXXXX-\\r\\n                \\\\\\\\XXXXXXXXXXXXXXXXXXXXXXXXXX/\\r\\n                  \\\"\\\"VXXXXXXXXXXXXXXXXXXV\\\"\\\"\\r\\nEOC\\r\\n\",\n  \"hellokitty\": \"##\\r\\n## Hello Kitty\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts\\r\\n      /\\\\\\\\_)o<\\r\\n     |      \\\\\\\\\\r\\n     | O . O|\\r\\n      \\\\\\\\_____/\\r\\nEOC\\r\\n\",\n  \"kiss\": \"##\\r\\n## A lovers' empbrace\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n     $thoughts\\r\\n      $thoughts\\r\\n             ,;;;;;;;,\\r\\n            ;;;;;;;;;;;,\\r\\n           ;;;;;'_____;'\\r\\n           ;;;(/))))|((\\\\\\\\\\r\\n           _;;((((((|))))\\r\\n          / |_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\n     .--~(  \\\\\\\\ ~))))))))))))\\r\\n    /     \\\\\\\\  `\\\\\\\\-(((((((((((\\\\\\\\\\\\\\\\\\r\\n    |    | `\\\\\\\\   ) |\\\\\\\\       /|)\\r\\n     |    |  `. _/  \\\\\\\\_____/ |\\r\\n      |    , `\\\\\\\\~            /\\r\\n       |    \\\\\\\\  \\\\\\\\           /\\r\\n      | `.   `\\\\\\\\|          /\\r\\n      |   ~-   `\\\\\\\\        /\\r\\n       \\\\\\\\____~._/~ -_,   (\\\\\\\\\\r\\n        |-----|\\\\\\\\   \\\\\\\\    ';;\\r\\n       |      | :;;;'     \\\\\\\\\\r\\n      |  /    |            |\\r\\n      |       |            |\\r\\nEOC\\r\\n\",\n  \"kitty\": \"##\\r\\n## A kitten of sorts, I think\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n     $thoughts\\r\\n      $thoughts\\r\\n       (\\\"`-'  '-/\\\") .___..--' ' \\\"`-._\\r\\n         ` *_ *  )    `-.   (      ) .`-.__. `)\\r\\n         (_Y_.) ' ._   )   `._` ;  `` -. .-'\\r\\n      _.. `--'_..-_/   /--' _ .' ,4\\r\\n   ( i l ),-''  ( l i),'  ( ( ! .-'    \\r\\nEOC\\r\\n\",\n  \"koala\": \"##\\r\\n## From the canonical koala collection\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts\\r\\n       ___  \\r\\n     {~._.~}\\r\\n      ( Y )\\r\\n     ()~*~()   \\r\\n     (_)-(_)   \\r\\nEOC\\r\\n\",\n  \"kosh\": \"##\\r\\n## It's a Kosh Cow!\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n    $thoughts\\r\\n     $thoughts\\r\\n      $thoughts\\r\\n  ___       _____     ___\\r\\n /   \\\\\\\\     /    /|   /   \\\\\\\\\\r\\n|     |   /    / |  |     |\\r\\n|     |  /____/  |  |     |     \\r\\n|     |  |    |  |  |     |\\r\\n|     |  | {} | /   |     |\\r\\n|     |  |____|/    |     |\\r\\n|     |    |==|     |     |\\r\\n|      \\\\\\\\___________/      |\\r\\n|                         |\\r\\n|                         |\\r\\nEOC\\r\\n\",\n  \"luke-koala\": \"##\\r\\n## From the canonical koala collection\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts          .\\r\\n       ___   //\\r\\n     {~._.~}// \\r\\n      ( Y )K/  \\r\\n     ()~*~()   \\r\\n     (_)-(_)   \\r\\n     Luke    \\r\\n     Sywalker\\r\\n     koala   \\r\\nEOC\\r\\n\",\n  \"mech-and-cow\": \"                                   ,-----.\\r\\n                                   |     |\\r\\n                                ,--|     |-.\\r\\n                         __,----|  |     | |\\r\\n                       ,;::     |  `_____' |\\r\\n                       `._______|    i^i   |\\r\\n                                `----| |---'| .\\r\\n                           ,-------._| |== ||//\\r\\n                           |       |_|P`.  /'/\\r\\n                           `-------' 'Y Y/'/'\\r\\n                                     .==\\\\ /_\\\\\\r\\n   ^__^                             /   /'|  `i\\r\\n   (oo)\\\\_______                   /'   /  |   |\\r\\n   (__)\\\\       )\\\\/\\\\             /'    /   |   `i\\r\\n       ||----w |           ___,;`----'.___L_,-'`\\\\__\\r\\n       ||     ||          i_____;----\\\\.____i\\\"\\\"\\\\____\\\\\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\n  \"meow\": \"##\\r\\n## A meowing tiger?\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts ,   _ ___.--'''`--''//-,-_--_.\\r\\n      \\\\\\\\`\\\"' ` || \\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\\\\\\\\\/ / // / ,-\\\\\\\\\\\\\\\\`,_\\r\\n     /'`  \\\\\\\\ \\\\\\\\ || Y  | \\\\\\\\|/ / // / - |__ `-,\\r\\n    /\\\\@\\\"\\\\\\\\  ` \\\\\\\\ `\\\\\\\\ |  | ||/ // | \\\\\\\\/  \\\\\\\\  `-._`-,_.,\\r\\n   /  _.-. `.-\\\\\\\\,___/\\\\\\\\ _/|_/_\\\\\\\\_\\\\\\\\/|_/ |     `-._._)\\r\\n   `-'``/  /  |  // \\\\\\\\__/\\\\\\\\__  /  \\\\\\\\__/ \\\\\\\\\\r\\n        `-'  /-\\\\\\\\/  | -|   \\\\\\\\__ \\\\\\\\   |-' |\\r\\n          __/\\\\\\\\ / _/ \\\\\\\\/ __,-'   ) ,' _|'\\r\\n         (((__/(((_.' ((___..-'((__,'\\r\\nEOC\\r\\n\",\n  \"milk\": \"##\\r\\n## Milk from Milk and Cheese\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n $thoughts     ____________ \\r\\n  $thoughts    |__________|\\r\\n      /           /\\\\\\\\\\r\\n     /           /  \\\\\\\\\\r\\n    /___________/___/|\\r\\n    |          |     |\\r\\n    |  ==\\\\\\\\ /== |     |\\r\\n    |   O   O  | \\\\\\\\ \\\\\\\\ |\\r\\n    |     <    |  \\\\\\\\ \\\\\\\\|\\r\\n   /|          |   \\\\\\\\ \\\\\\\\\\r\\n  / |  \\\\\\\\_____/ |   / /\\r\\n / /|          |  / /|\\r\\n/||\\\\\\\\|          | /||\\\\\\\\/\\r\\n    -------------|   \\r\\n        | |    | | \\r\\n       <__/    \\\\\\\\__>\\r\\nEOC\\r\\n\",\n  \"moofasa\": \"##\\r\\n## MOOfasa.\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n       $thoughts    ____\\r\\n        $thoughts  /    \\\\\\\\\\r\\n          | ^__^ |\\r\\n          | ($eyes) |______\\r\\n          | (__) |      )\\\\\\\\/\\\\\\\\\\r\\n           \\\\\\\\____/|----w |\\r\\n                ||     ||\\r\\n\\r\\n\\t         Moofasa\\r\\nEOC\\r\\n\",\n  \"moose\": \"$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n   $thoughts   \\\\\\\\_\\\\\\\\_    _/_/\\r\\n    $thoughts      \\\\\\\\__/\\r\\n           ($eyes)\\\\\\\\_______\\r\\n           (__)\\\\\\\\       )\\\\\\\\/\\\\\\\\\\r\\n            $tongue ||----w |\\r\\n               ||     ||\\r\\nEOC\\r\\n\",\n  \"mutilated\": \"##\\r\\n## A mutilated cow, from aspolito@csua.berkeley.edu\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n       $thoughts   \\\\\\\\_______\\r\\n v__v   $thoughts  \\\\\\\\   O   )\\r\\n ($eyes)      ||----w |\\r\\n (__)      ||     ||  \\\\\\\\/\\\\\\\\\\r\\n  $tongue\\r\\nEOC\\r\\n\",\n  \"ren\": \"##\\r\\n## Ren \\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts\\r\\n    ____  \\r\\n   /# /_\\\\\\\\_\\r\\n  |  |/o\\\\\\\\o\\\\\\\\\\r\\n  |  \\\\\\\\\\\\\\\\_/_/\\r\\n / |_   |  \\r\\n|  ||\\\\\\\\_ ~| \\r\\n|  ||| \\\\\\\\/  \\r\\n|  |||_    \\r\\n \\\\\\\\//  |    \\r\\n  ||  |    \\r\\n  ||_  \\\\\\\\   \\r\\n  \\\\\\\\_|  o|  \\r\\n  /\\\\\\\\___/   \\r\\n /  ||||__ \\r\\n    (___)_)\\r\\nEOC\\r\\n\",\n  \"rooster\": \"$the_cow = <<\\\"EOC\\\";\\r\\n$thoughts\\r\\n $thoughts\\r\\n\\r\\n.\\\".\\\".\\\".\\r\\n(`       `)               _.-=-.\\r\\n'._.--.-;             .-`  -'  '.\\r\\n.-'`.o )  \\\\           /  .-_.--'  `\\\\\\r\\n`;---) \\\\    ;         /  / ;' _-_.-' `\\r\\n`;\\\"`  ;    \\\\        ; .  .'   _-' \\\\\\r\\n(    )    |        |  / .-.-'    -`\\r\\n '-.-'     \\\\       | .' ` '.-'-\\\\`\\r\\n  /_./\\\\_.|\\\\_\\\\      ;  ' .'-'.-.\\r\\n  /         '-._    \\\\` /  _;-,\\r\\n |         .-=-.;-._ \\\\  -'-,\\r\\n \\\\        /      `\\\";`-`,-\\\"`)\\r\\n  \\\\       \\\\     '-- `\\\\.\\\\\\r\\n   '.      '._ '-- '--'/\\r\\n     `-._     `'----'`;\\r\\n         `\\\"\\\"\\\"--.____,/\\r\\n                \\\\\\\\  \\\\\\r\\n                // /`\\r\\n            ___// /__\\r\\n  jgs     (`(`(---\\\"-`)\\r\\n\\r\\nEOC\\r\\n\",\n  \"satanic\": \"##\\r\\n## Satanic cow, source unknown.\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n     $thoughts\\r\\n      $thoughts  (__)  \\r\\n         (\\\\\\\\/)  \\r\\n  /-------\\\\\\\\/    \\r\\n / | 666 ||    \\r\\n*  ||----||      \\r\\n   ~~    ~~      \\r\\nEOC\\r\\n\",\n  \"sheep\": \"##\\r\\n## The non-flaming sheep.\\r\\n##\\r\\n$the_cow = <<EOC\\r\\n  $thoughts\\r\\n   $thoughts\\r\\n       __     \\r\\n      U${eyes}U\\\\\\\\.'\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@`.\\r\\n      \\\\\\\\__/(\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@)\\r\\n           (\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@\\\\@)\\r\\n           `YY~~~~YY'\\r\\n            ||    ||\\r\\nEOC\\r\\n\",\n  \"skeleton\": \"##\\r\\n## This 'Scowleton' brought to you by one of \\r\\n## {appel,kube,rowe}@csua.berkeley.edu\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n          $thoughts      (__)      \\r\\n           $thoughts     /$eyes|  \\r\\n            $thoughts   (_\\\"_)*+++++++++*\\r\\n                   //I#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I\\\\\\\\\\r\\n                   I[I|I|||||I I `\\r\\n                   I`I'///'' I I\\r\\n                   I I       I I\\r\\n                   ~ ~       ~ ~\\r\\n                     Scowleton\\r\\nEOC\\r\\n\",\n  \"small\": \"##\\r\\n## A small cow, artist unknown\\r\\n##\\r\\n$eyes = \\\"..\\\" unless ($eyes);\\r\\n$the_cow = <<EOC;\\r\\n       $thoughts   ,__,\\r\\n        $thoughts  ($eyes)____\\r\\n           (__)    )\\\\\\\\\\r\\n            $tongue||--|| *\\r\\nEOC\\r\\n\",\n  \"squirrel\": \"$the_cow = <<EOC;\\r\\n  $thoughts\\r\\n     $thoughts\\r\\n                  _ _\\r\\n       | \\\\__/|  .~    ~.\\r\\n       /$eyes `./      .'\\r\\n      {o__,   \\\\    {\\r\\n        / .  . )    \\\\\\r\\n        `-` '-' \\\\    }\\r\\n       .(   _(   )_.'\\r\\n      '---.~_ _ _|\\r\\n                                                     \\r\\nEOC\\r\\n\",\n  \"stegosaurus\": \"##\\r\\n## A stegosaur with a top hat?\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n$thoughts                             .       .\\r\\n $thoughts                           / `.   .' \\\" \\r\\n  $thoughts                  .---.  <    > <    >  .---.\\r\\n   $thoughts                 |    \\\\\\\\  \\\\\\\\ - ~ ~ - /  /    |\\r\\n         _____          ..-~             ~-..-~\\r\\n        |     |   \\\\\\\\~~~\\\\\\\\.'                    `./~~~/\\r\\n       ---------   \\\\\\\\__/                        \\\\\\\\__/\\r\\n      .'  O    \\\\\\\\     /               /       \\\\\\\\  \\\" \\r\\n     (_____,    `._.'               |         }  \\\\\\\\/~~~/\\r\\n      `----.          /       }     |        /    \\\\\\\\__/\\r\\n            `-.      |       /      |       /      `. ,~~|\\r\\n                ~-.__|      /_ - ~ ^|      /- _      `..-'   \\r\\n                     |     /        |     /     ~-.     `-. _  _  _\\r\\n                     |_____|        |_____|         ~ - . _ _ _ _ _>\\r\\nEOC\\r\\n\",\n  \"stimpy\": \"##\\r\\n## Stimpy!\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts     .    _  .    \\r\\n   $thoughts    |\\\\\\\\_|/__/|    \\r\\n       / / \\\\\\\\/ \\\\\\\\  \\\\\\\\  \\r\\n      /__|O||O|__ \\\\\\\\ \\r\\n     |/_ \\\\\\\\_/\\\\\\\\_/ _\\\\\\\\ |  \\r\\n     | | (____) | ||  \\r\\n     \\\\\\\\/\\\\\\\\___/\\\\\\\\__/  // \\r\\n     (_/         ||\\r\\n      |          ||\\r\\n      |          ||\\\\\\\\   \\r\\n       \\\\\\\\        //_/  \\r\\n        \\\\\\\\______//\\r\\n       __ || __||\\r\\n      (____(____)\\r\\nEOC\\r\\n\",\n  \"supermilker\": \"##\\r\\n## A cow being milked, probably from Lars Smith (lars@csua.berkeley.edu)\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts   ^__^\\r\\n   $thoughts  ($eyes)\\\\\\\\_______        ________\\r\\n      (__)\\\\\\\\       )\\\\\\\\/\\\\\\\\    |Super |\\r\\n       $tongue ||----W |       |Milker|\\r\\n          ||    UDDDDDDDDD|______|\\r\\nEOC\\r\\n\",\n  \"surgery\": \"##\\r\\n## A cow operation, artist unknown\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n          $thoughts           \\\\\\\\  / \\r\\n           $thoughts           \\\\\\\\/  \\r\\n               (__)    /\\\\\\\\         \\r\\n               ($eyes)   O  O        \\r\\n               _\\\\\\\\/_   //         \\r\\n         *    (    ) //       \\r\\n          \\\\\\\\  (\\\\\\\\\\\\\\\\    //       \\r\\n           \\\\\\\\(  \\\\\\\\\\\\\\\\    )                              \\r\\n            (   \\\\\\\\\\\\\\\\   )   /\\\\\\\\                          \\r\\n  ___[\\\\\\\\______/^^^^^^^\\\\\\\\__/) o-)__                     \\r\\n |\\\\\\\\__[=======______//________)__\\\\\\\\                    \\r\\n \\\\\\\\|_______________//____________|                    \\r\\n     |||      || //||     |||\\r\\n     |||      || @.||     |||                        \\r\\n      ||      \\\\\\\\/  .\\\\\\\\/      ||                        \\r\\n                 . .                                 \\r\\n                '.'.`                                \\r\\n\\r\\n            COW-OPERATION                           \\r\\nEOC\\r\\n\",\n  \"turkey\": \"##\\r\\n## Turkey!\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n  $thoughts                                  ,+*^^*+___+++_\\r\\n   $thoughts                           ,*^^^^              )\\r\\n    $thoughts                       _+*                     ^**+_\\r\\n     $thoughts                    +^       _ _++*+_+++_,         )\\r\\n              _+^^*+_    (     ,+*^ ^          \\\\\\\\+_        )\\r\\n             {       )  (    ,(    ,_+--+--,      ^)      ^\\\\\\\\\\r\\n            { (\\\\@)    } f   ,(  ,+-^ __*_*_  ^^\\\\\\\\_   ^\\\\\\\\       )\\r\\n           {:;-/    (_+*-+^^^^^+*+*<_ _++_)_    )    )      /\\r\\n          ( /  (    (        ,___    ^*+_+* )   <    <      \\\\\\\\\\r\\n           U _/     )    *--<  ) ^\\\\\\\\-----++__)   )    )       )\\r\\n            (      )  _(^)^^))  )  )\\\\\\\\^^^^^))^*+/    /       /\\r\\n          (      /  (_))_^)) )  )  ))^^^^^))^^^)__/     +^^\\r\\n         (     ,/    (^))^))  )  ) ))^^^^^^^))^^)       _)\\r\\n          *+__+*       (_))^)  ) ) ))^^^^^^))^^^^^)____*^\\r\\n          \\\\\\\\             \\\\\\\\_)^)_)) ))^^^^^^^^^^))^^^^)\\r\\n           (_             ^\\\\\\\\__^^^^^^^^^^^^))^^^^^^^)\\r\\n             ^\\\\\\\\___            ^\\\\\\\\__^^^^^^))^^^^^^^^)\\\\\\\\\\\\\\\\\\r\\n                  ^^^^^\\\\\\\\uuu/^^\\\\\\\\uuu/^^^^\\\\\\\\^\\\\\\\\^\\\\\\\\^\\\\\\\\^\\\\\\\\^\\\\\\\\^\\\\\\\\^\\\\\\\\\\r\\n                     ___) >____) >___   ^\\\\\\\\_\\\\\\\\_\\\\\\\\_\\\\\\\\_\\\\\\\\_\\\\\\\\_\\\\\\\\)\\r\\n                    ^^^//\\\\\\\\\\\\\\\\_^^//\\\\\\\\\\\\\\\\_^       ^(\\\\\\\\_\\\\\\\\_\\\\\\\\_\\\\\\\\)\\r\\n                      ^^^ ^^ ^^^ ^\\r\\nEOC\\r\\n\",\n  \"turtle\": \"##\\r\\n## A mysterious turtle...\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n    $thoughts                                  ___-------___\\r\\n     $thoughts                             _-~~             ~~-_\\r\\n      $thoughts                         _-~                    /~-_\\r\\n             /^\\\\\\\\__/^\\\\\\\\         /~  \\\\\\\\                   /    \\\\\\\\\\r\\n           /|  O|| O|        /      \\\\\\\\_______________/        \\\\\\\\\\r\\n          | |___||__|      /       /                \\\\\\\\          \\\\\\\\\\r\\n          |          \\\\\\\\    /      /                    \\\\\\\\          \\\\\\\\\\r\\n          |   (_______) /______/                        \\\\\\\\_________ \\\\\\\\\\r\\n          |         / /         \\\\\\\\                      /            \\\\\\\\\\r\\n           \\\\\\\\         \\\\\\\\^\\\\\\\\\\\\\\\\         \\\\\\\\                  /               \\\\\\\\     /\\r\\n             \\\\\\\\         ||           \\\\\\\\______________/      _-_       //\\\\\\\\__//\\r\\n               \\\\\\\\       ||------_-~~-_ ------------- \\\\\\\\ --/~   ~\\\\\\\\    || __/\\r\\n                 ~-----||====/~     |==================|       |/~~~~~\\r\\n                  (_(__/  ./     /                    \\\\\\\\_\\\\\\\\      \\\\\\\\.\\r\\n                         (_(___/                         \\\\\\\\_____)_)\\r\\nEOC\\r\\n\",\n  \"tux\": \"##\\r\\n## TuX\\r\\n## (c) pborys@p-soft.silesia.linux.org.pl \\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts\\r\\n        .--.\\r\\n       |o_o |\\r\\n       |:_/ |\\r\\n      //   \\\\\\\\ \\\\\\\\\\r\\n     (|     | )\\r\\n    /'\\\\\\\\_   _/`\\\\\\\\\\r\\n    \\\\\\\\___)=(___/\\r\\n\\r\\nEOC\\r\\n\",\n  \"vader-koala\": \"##\\r\\n## Another canonical koala?\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n   $thoughts\\r\\n    $thoughts        .\\r\\n     .---.  //\\r\\n    Y|o o|Y// \\r\\n   /_(i=i)K/ \\r\\n   ~()~*~()~  \\r\\n    (_)-(_)   \\r\\n\\r\\n     Darth \\r\\n     Vader    \\r\\n     koala        \\r\\nEOC\\r\\n\",\n  \"vader\": \"##\\r\\n## Cowth Vader, from geordan@csua.berkeley.edu\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n        $thoughts    ,-^-.\\r\\n         $thoughts   !oYo!\\r\\n          $thoughts /./=\\\\\\\\.\\\\\\\\______\\r\\n               ##        )\\\\\\\\/\\\\\\\\\\r\\n                ||-----w||\\r\\n                ||      ||\\r\\n\\r\\n               Cowth Vader\\r\\nEOC\\r\\n\",\n  \"www\": \"##\\r\\n## A cow wadvertising the World Wide Web, from lim@csua.berkeley.edu\\r\\n##\\r\\n$the_cow = <<EOC;\\r\\n        $thoughts   ^__^\\r\\n         $thoughts  ($eyes)\\\\\\\\_______\\r\\n            (__)\\\\\\\\       )\\\\\\\\/\\\\\\\\\\r\\n             $tongue ||--WWW |\\r\\n                ||     ||\\r\\nEOC\\r\\n\"\n}\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/lib/cow-definitions.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/lib/cows.js":
/*!*************************************************!*\
  !*** ./node_modules/cowsay-browser/lib/cows.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var path = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\r\nvar replacer = __webpack_require__(/*! ./replacer */ \"./node_modules/cowsay-browser/lib/replacer.js\");\r\n\r\nvar cowdefs = __webpack_require__(/*! ./cow-definitions */ \"./node_modules/cowsay-browser/lib/cow-definitions.js\").cowdefs;\r\n\r\nvar textCache = {};\r\n\r\nexports.get = function (cow) {\r\n\tvar text = cowdefs[cow];\r\n\r\n\tif (!text) {\r\n\t\ttext = cowdefs['default'];\r\n\t}\r\n\r\n\treturn function (options) {\r\n\t\treturn replacer(text, options);\r\n\t};\r\n}\r\n\r\nexports.list = function (callback) {\r\n\r\n\tvar cows = [];\r\n\r\n\tfor (var cow in cowdefs) {\r\n\t  cows.push(cow)\r\n\t}\r\n\r\n\tcallback(null, cows);\r\n}\r\n\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/lib/cows.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/lib/faces.js":
/*!**************************************************!*\
  !*** ./node_modules/cowsay-browser/lib/faces.js ***!
  \**************************************************/
/***/ ((module) => {

eval("var modes = {\r\n\t\"b\" : {\r\n\t\teyes : \"==\",\r\n\t\ttongue : \"  \"\r\n\t},\r\n\t\"d\" : {\r\n\t\teyes : \"xx\",\r\n\t\ttongue : \"U \"\r\n\t},\r\n\t\"g\" : {\r\n\t\teyes : \"$$\",\r\n\t\ttongue : \"  \"\r\n\t},\r\n\t\"p\" : {\r\n\t\teyes : \"@@\",\r\n\t\ttongue : \"  \"\r\n\t},\r\n\t\"s\" : {\r\n\t\teyes : \"**\",\r\n\t\ttongue : \"U \"\r\n\t},\r\n\t\"t\" : {\r\n\t\teyes : \"--\",\r\n\t\ttongue : \"  \"\r\n\t},\r\n\t\"w\" : {\r\n\t\teyes : \"OO\",\r\n\t\ttongue : \"  \"\r\n\t},\r\n\t\"y\" : {\r\n\t\teyes : \"..\",\r\n\t\ttongue : \"  \"\r\n\t}\r\n};\r\n\r\nmodule.exports = function (options) {\r\n\tfor (var mode in modes) {\r\n\t\tif (options[mode] === true) {\r\n\t\t\treturn modes[mode];\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\teyes : options.e || \"oo\",\r\n\t\ttongue : options.T || \"  \"\r\n\t};\r\n};\r\n\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/lib/faces.js?");

/***/ }),

/***/ "./node_modules/cowsay-browser/lib/replacer.js":
/*!*****************************************************!*\
  !*** ./node_modules/cowsay-browser/lib/replacer.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("module.exports = function (cow, variables) {\r\n\tvar eyes = escapeRe(variables.eyes);\r\n\tvar tongue = escapeRe(variables.tongue);\r\n\r\n\tif (cow.indexOf(\"$the_cow\") !== -1) {\r\n\t\tcow = extractTheCow(cow);\r\n\t}\r\n\r\n\treturn cow\r\n\t\t.replace(/\\$thoughts/g, variables.thoughts)\r\n\t\t.replace(/\\$eyes/g, eyes)\r\n\t\t.replace(/\\$tongue/g, tongue)\r\n\t\t.replace(/\\$\\{eyes\\}/g, eyes)\r\n\t\t.replace(/\\$\\{tongue\\}/g, tongue)\r\n\t;\r\n};\r\n\r\n/*\r\n * \"$\" dollar signs must be doubled before being used in a regex replace\r\n * This can occur in eyes or tongue.\r\n * For example:\r\n *\r\n * cowsay -g Moo!\r\n *\r\n * cowsay -e \"\\$\\$\" Moo!\r\n */\r\nfunction escapeRe (s) {\r\n\tif (s && s.replace) {\r\n\t\treturn s.replace(/\\$/g, \"$$$$\");\r\n\t}\r\n\treturn s;\r\n}\r\n\r\nfunction extractTheCow (cow) {\r\n\tcow = cow.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, '');\r\n\tvar match = /\\$the_cow\\s*=\\s*<<\"*EOC\"*;*\\n([\\s\\S]+)\\nEOC\\n/.exec(cow);\r\n\r\n\tif (!match) {\r\n\t\tconsole.error(\"Cannot parse cow file\\n\", cow);\r\n\t\treturn cow;\r\n\t} else {\r\n\t\treturn match[1].replace(/\\\\{2}/g, \"\\\\\").replace(/\\\\@/g, \"@\").replace(/\\\\\\$/g, \"$\");\r\n\t}\r\n}\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/cowsay-browser/lib/replacer.js?");

/***/ }),

/***/ "./src/css/main.css":
/*!**************************!*\
  !*** ./src/css/main.css ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://1_simples_webpack/./src/css/main.css?");

/***/ }),

/***/ "./node_modules/os-browserify/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/os-browserify/browser.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/os-browserify/browser.js?");

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n\n\n//# sourceURL=webpack://1_simples_webpack/./node_modules/path-browserify/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;